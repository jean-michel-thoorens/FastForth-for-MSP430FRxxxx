# Define SciTE settings for MACROASSEMBLER AS for MSP430



file.patterns.asm=*.asm;*.inc;*.lst;*.mac

# add '*.inc;*.asm;' to 'source.files' variable in 'SciTEGlobal.properties'
# if you want to include these file patterns into default source file list

lexer.$(file.patterns.asm)=asm

*language.asm=ASM|asm||

*source.patterns.asm=$(file.patterns.asm);

filter.asm=asm files (asm inc)|$(file.patterns.asm)|

*filter.asm=$(filter.asm)

word.characters.$(file.patterns.asm)=$(chars.alpha)$(chars.numeric)_

comment.block.asm=\ ~
#comment.block.at.line.start.asm=0
comment.box.start.asm=\
comment.box.middle.asm=\
comment.box.end.asm=\
comment.stream.start.asm=(
comment.stream.end.asm=)

# asm styles

#MSP430_instructions
keywords.$(file.patterns.asm)=adc adc.b adc.w add add.b add.w addc addc.b addc.w and and.b and.w \
    bic bic.b bic.w bis bis.b bis.w bit bit.b bit.w br branch call clrc clrn clrz dint eint \
    clr clr.b clr.w cmp cmp.b cmp.w dadc dadc.b dadc.w dadd dadd.b dadd.w dec dec.b dec.w decd decd.b decd.w \
    inc inc.b inc.w incd incd.b incd.w inv inv.b inv.w mov mov.b mov.w pop pop.b pop.w push push.b push.w \
    jc jhs je jeq jz jge jl jmp jn jnc jlo jne jnz nop nop2 nop3 nop4 nop5 nop6 nop7 ret reti setc setn setz swpb sxt \
    rla rla.b rla.w rlc rlc.b rlc.w rra rra.b rra.w rrc rrc.b rrc.w sbc sbc.b sbc.w sub sub.b sub.w \
    subc subc.b subc.w sbb sbb.b sbb.w tst tst.b tst.w xor xor.b xor.w \
    pushm popm rlam rram rrcm rrum 

##preprocessor
#keywords2.$(file.patterns.asm)=#define #elif #else #endif #error\
    ##if #ifdef #ifndef #include #message  #pragma #undef #warning

# MACROASSEMBLER AS directives
keywords3.$(file.patterns.asm)=.align .cpu .byte .word .endm .endmacro \
    .equ .include .macro .org .reg .set .ifdef .ifndef .if .elseif .else .endif \
    .switch .case .elsecase .endcase \
    .warning .error

# my macros
keywords4.$(file.patterns.asm)=NEXT DOALIAS DEST







# Default
style.asm.32=$(font.base)
# whitespace
style.asm.0=$(font.base)

# Comment stream
style.asm.1=$(colour.code.comment.line)
#style.asm.1=fore:#00FF00,$(font.comment)

# Number
#style.asm.2=$(colour.number)
style.asm.2=fore:#FF0000

# String
#style.asm.3=$(colour.string)
style.asm.3=fore:#00FFFF

# Operator (= - / * , etc.)
style.asm.4=fore:#00FFFF

# Identifier (text)
style.asm.5=fore:#FFFFFF

# CPU instruction ( add, adc, adiw, etc.)
style.asm.6=$(colour.keyword)

# preprocessor (#define #elif #else, etc.)
style.asm.7=fore:#FFFF00

# directives (.byte .cseg  etc.)
style.asm.8=fore:#FFFF00

# assembler Directive
style.asm.9=fore:#FF00ff

# my macros
style.asm.9=fore:#00FFff


# Comment block (GNU as /*...*/ syntax, unimplemented)
# style.asm.11=$(colour.code.comment.box),$(font.code.comment.box)
# Character/String (single quote) (also character prefix in GNU as)
style.asm.12=$(colour.char)
# End of line where string is not closed
#style.asm.13=fore:#000000,back:#E0C0E0,eolfilled
style.asm.13=fore:#FFFFFF,back:#000000


# the star at the start of this command line is to display the parameters box
# write the name of the device in the first parameter; example : MSP430fr5969
# write the name of the target in the 2th parameter; example : MSP_EXP430fr5969

command.name.0.*.asm=Assembler 1:[device]  2:[target]
command.0.*.asm=*\config\scite\AS_MSP430\build.bat $(FileNameExt) $(2)$(3)

command.name.1.*.asm=FET Prog 1:[device]  2:[target]
command.1.*.asm=*\config\scite\AS_MSP430\prog.bat $(1) $(2)$(3).txt








